{"version":3,"file":"static/js/898.8eb843f9.chunk.js","mappings":"qQAGaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1B,OAAO,6BACFA,EAAQC,OAAS,GAAI,SAACC,EAAA,EAAD,CAASC,IAAMH,EAASI,IAAI,aAAc,sCAEvE,E,8BC0BD,EA3BgB,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEVN,GAAW,SAAAO,GAAW,OAAKA,CAAL,IAFZ,UAGSC,EAAAA,EAAAA,IAAcL,EAASM,MAAMA,OAHtC,OAGJC,EAHI,OAIVZ,EAAWY,GAJD,gDAMdR,EAAS,KAAMS,SAND,yBAQVX,GAAW,SAAAO,GAAW,OAAKA,CAAL,IARZ,4EAAH,qDAWfD,GACH,GAAE,CAACH,EAASM,MAAMA,SACX,gCACHV,IAAW,SAACa,EAAA,EAAD,IACXX,IAAS,SAAC,KAAD,yBACTT,IAAW,SAACD,EAAD,CAAaC,QAASA,MAGzC,C","sources":["components/ReviewsInfo/ReviewsInfo.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import PropTypes, { shape } from \"prop-types\";\nimport Gallery from \"components/Gallery/Gallery\";\n\nexport const ReviewsInfo = ({ reviews }) => {\n    // console.log('reviews', reviews);\n    return <section>\n        {reviews.length > 0 ? <Gallery arr={ reviews} use=\"reviews\"/> : <div>no info</div>}\n    </section>\n}\n\nReviewsInfo.propTypes = {\n    reviews: PropTypes.arrayOf(shape()).isRequired,\n}","import { Error } from \"components/common/common.styled\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { ReviewsInfo } from \"components/ReviewsInfo/ReviewsInfo\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { searchReviews } from \"services/Api\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState(null);\n    const [loading, setLoading] = useState(false);    \n    const [error, setError] = useState(null);\n    const location = useLocation();        \n\n    useEffect(() => { \n        const fetchData = async () => {        \n            try {\n                setLoading(prevLoading => !prevLoading);\n                const data = await searchReviews(location.state.state);                  \n                setReviews(data);                \n        } catch (error) {\n            setError(error.message);\n        }finally {\n                setLoading(prevLoading => !prevLoading);\n            }\n        };\n        fetchData();\n    }, [location.state.state]);\n    return (<>\n        {loading && <Loading />}\n        {error && <Error>Sorry, ...</Error>}\n        {reviews && <ReviewsInfo reviews={reviews} /> }\n        \n        </>)\n};\nexport default Reviews;"],"names":["ReviewsInfo","reviews","length","Gallery","arr","use","useState","setReviews","loading","setLoading","error","setError","location","useLocation","useEffect","fetchData","prevLoading","searchReviews","state","data","message","Loading"],"sourceRoot":""}