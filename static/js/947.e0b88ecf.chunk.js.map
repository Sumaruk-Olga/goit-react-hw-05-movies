{"version":3,"file":"static/js/947.e0b88ecf.chunk.js","mappings":"mPAmDA,UA7CqB,WAAO,IAAD,IACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGIC,EAAY,oBAAGT,EAASU,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAoB3C,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEdT,GAAW,SAAAU,GAAW,OAAKA,CAAL,IAFR,UAGSC,EAAAA,EAAAA,IAAWjB,GAHpB,OAGJkB,EAHI,OAKVV,EAASU,GALC,gDAOdR,EAAS,KAAMS,SAPD,yBASVb,GAAW,SAAAU,GAAW,OAAKA,CAAL,IATZ,4EAAH,qDAYfD,GAEH,GAAE,CAAEf,KAEE,2BACFK,IAAW,SAAC,IAAD,IACXI,IAAS,wCACTF,IAAS,iCACN,SAAC,IAAD,CAAYa,GAAIT,EAAhB,UACI,mBAAQU,KAAK,SAAb,wBAEJ,yCACA,sCACA,SAAC,IAAD,CAAYD,GAAG,OAAOR,MAAO,CAAEC,KAAMX,EAASU,MAAMC,MAApD,yCACA,SAAC,IAAD,CAAYO,GAAG,UAAUR,MAAO,CAAEC,KAAMX,EAASU,MAAMC,MAAvD,4CACA,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACI,SAAC,KAAD,WAIf,C,0DC/CKC,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iJAYhB,K","sources":["components/MovieDetails/MovieDetails.jsx","components/SharedNavigation/SharedNavigstion.styled.jsx"],"sourcesContent":["import { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport StyledLink from \"components/SharedNavigation/SharedNavigstion.styled\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { searchById } from \"services/Api\";\n\nconst MovieDetails = () => {    \n    const { movieId } = useParams();\n    const location = useLocation();\n    const [loading, setLoading] = useState(false);\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n    // console.log('movieId', movieId);\n    \n    let backLinkHref = location.state?.from ?? '/';\n    // console.log('backLinkHref.pathname', backLinkHref.pathname);        \n\n    useEffect(() => { \n        const fetchData = async () => {        \n        try {\n            setLoading(prevLoading => !prevLoading);\n                const data = await searchById(movieId);  \n                // console.log('data', data);\n                setMovie(data);                \n        } catch (error) {\n            setError(error.message);\n        }finally {\n                setLoading(prevLoading => !prevLoading);\n            }\n        };\n        fetchData();\n        \n    }, [ movieId]);\n\n    return <div>        \n        {loading && <Loading />}\n        {error && <div>Sorry, ...</div>}\n        {movie && <>\n            <StyledLink to={backLinkHref}>\n                <button type=\"button\">go back</button>\n            </StyledLink>\n            <p>MovieDetails</p>\n            <p>some info</p>\n            <StyledLink to=\"cast\" state={{ from: location.state.from }}>link for more cast details</StyledLink>\n            <StyledLink to=\"reviews\" state={{ from: location.state.from }}>link for more reviews details</StyledLink>\n            <Suspense fallback={<Loading/>}>\n                <Outlet/>\n            </Suspense>\n        </>}\n    </div>\n};\nexport default MovieDetails;","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst StyledLink = styled(NavLink)`    \n    color: black;\n\n    &.active{\n        color:red;\n    }\n\n    :hover:not(.active) {\n    color: orange;\n  }\n`;\n\nexport default StyledLink;\n\n"],"names":["movieId","useParams","location","useLocation","useState","loading","setLoading","movie","setMovie","error","setError","backLinkHref","state","from","useEffect","fetchData","prevLoading","searchById","data","message","to","type","Suspense","fallback","StyledLink","styled","NavLink"],"sourceRoot":""}