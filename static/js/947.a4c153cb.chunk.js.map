{"version":3,"file":"static/js/947.a4c153cb.chunk.js","mappings":"mPA+EA,UAzEqB,WAAO,IAAD,IACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,MAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA8BN,EAAAA,EAAAA,UAAS,MAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KACAC,QAAQC,IAAI,UAAWhB,GAEvB,IAAIiB,EAAY,oBAAGf,EAASgB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAG3CC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEdf,GAAW,SAAAgB,GAAW,OAAKA,CAAL,IAFR,UAGSC,EAAAA,EAAAA,IAAWvB,GAHpB,OAGJwB,EAHI,OAIVT,QAAQC,IAAI,OAAQQ,GACpBhB,EAASgB,GALC,gDAOdV,EAAS,KAAMW,SAPD,yBASVnB,GAAW,SAAAgB,GAAW,OAAKA,CAAL,IATZ,4EAAH,qDAYfD,GAEH,GAAE,CAAErB,IAGD,IAAM0B,EAAe,mCAAG,8GAGHC,EAAAA,EAAAA,IAAW3B,GAHR,OAGhBwB,EAHgB,OAIhBT,QAAQC,IAAI,OAAQQ,GAJJ,gDAMhBT,QAAQC,IAAI,KAAMS,SANF,yBAQhBf,EAAQc,GARQ,4EAAH,qDAYnBI,EAAkB,mCAAG,8GAGFC,EAAAA,EAAAA,IAAc7B,GAHZ,OAGfwB,EAHe,OAIfT,QAAQC,IAAI,OAAQQ,GAJL,gDAMfT,QAAQC,IAAI,KAAMS,SANH,yBAQfb,EAAWY,GARI,8CAUhBA,GAVgB,+DAAH,qDAaxB,OAAO,2BACFnB,IAAW,SAAC,IAAD,IACXQ,IAAS,wCACTN,IAAS,iCACN,SAAC,IAAD,CAAYuB,GAAIb,EAAhB,UACI,mBAAQc,KAAK,SAAb,wBAEJ,yCACA,sCACA,SAAC,IAAD,CAAYD,GAAG,OAAOZ,MAAO,CAAEC,KAAMjB,EAASgB,MAAMC,KAAMD,MAAMT,GAAQuB,QAASN,EAAjF,yCACA,SAAC,IAAD,CAAYI,GAAG,UAAUZ,MAAO,CAAEC,KAAMjB,EAASgB,MAAMC,KAAMD,MAAMP,GAAWsB,GAAIjC,EAASgC,QAASJ,EAApG,4CACA,SAAC,EAAAM,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACI,SAAC,KAAD,WAIf,C,0DC3EKC,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iJAYhB,K","sources":["components/MovieDetails/MovieDetails.jsx","components/SharedNavigation/SharedNavigstion.styled.jsx"],"sourcesContent":["import { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport StyledLink from \"components/SharedNavigation/SharedNavigstion.styled\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { searchById, searchCast, searchReviews } from \"services/Api\";\n\nconst MovieDetails = () => {    \n    const { movieId } = useParams();\n    const location = useLocation();\n    const [loading, setLoading] = useState(false);\n    const [movie, setMovie] = useState(null);\n    const [cast, setCast] = useState(null);\n    const [reviews, setReviews] = useState(null);\n    const [error, setError] = useState(null);\n    console.log('movieId', movieId);\n    \n    let backLinkHref = location.state?.from ?? '/';\n    \n\n    useEffect(() => { \n        const fetchData = async () => {        \n        try {\n            setLoading(prevLoading => !prevLoading);\n                const data = await searchById(movieId);  \n                console.log('data', data);\n                setMovie(data);                \n        } catch (error) {\n            setError(error.message);\n        }finally {\n                setLoading(prevLoading => !prevLoading);\n            }\n        };\n        fetchData();\n        \n    }, [ movieId]);\n\n\n        const handleCastClick = async () => {\n        let data;\n            try {\n                data = await searchCast(movieId);\n                console.log('data', data);\n            } catch (error) {\n                console.log(error.message);\n            } finally {\n                setCast(data);\n            }       \n    }    \n    \n    const handleReviewsClick = async () => {\n        let data;\n            try {\n                data = await searchReviews(movieId);\n                console.log('data', data);\n            } catch (error) {\n                console.log(error.message);\n            } finally {\n                setReviews(data);\n        }    \n        return data\n        }\n\n    return <div>        \n        {loading && <Loading />}\n        {error && <div>Sorry, ...</div>}\n        {movie && <>\n            <StyledLink to={backLinkHref}>\n                <button type=\"button\">go back</button>\n            </StyledLink>\n            <p>MovieDetails</p>\n            <p>some info</p>\n            <StyledLink to=\"cast\" state={{ from: location.state.from, state:cast }} onClick={handleCastClick}>link for more cast details</StyledLink>\n            <StyledLink to=\"reviews\" state={{ from: location.state.from, state:reviews }} id={movieId} onClick={handleReviewsClick}>link for more reviews details</StyledLink>\n            <Suspense fallback={<Loading/>}>\n                <Outlet/>\n            </Suspense>\n        </>}\n    </div>\n};\nexport default MovieDetails;","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst StyledLink = styled(NavLink)`    \n    color: black;\n\n    &.active{\n        color:red;\n    }\n\n    :hover:not(.active) {\n    color: orange;\n  }\n`;\n\nexport default StyledLink;\n\n"],"names":["movieId","useParams","location","useLocation","useState","loading","setLoading","movie","setMovie","cast","setCast","reviews","setReviews","error","setError","console","log","backLinkHref","state","from","useEffect","fetchData","prevLoading","searchById","data","message","handleCastClick","searchCast","handleReviewsClick","searchReviews","to","type","onClick","id","Suspense","fallback","StyledLink","styled","NavLink"],"sourceRoot":""}