{"version":3,"file":"static/js/471.de077f4c.chunk.js","mappings":"2PAKaA,EAAW,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACvB,OAAO,gCACH,SAAC,KAAD,qBACA,SAACC,EAAA,EAAD,CAASD,IAAKA,EAAKE,IAAI,WAE9B,E,wCCyBD,EA5Ba,WACT,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEVJ,EAAS,MACTF,GAAW,SAAAO,GAAW,OAAKA,CAAL,IAHZ,UAISC,EAAAA,EAAAA,IAAWL,EAASM,MAAMA,OAJnC,OAIJC,EAJI,OAKVZ,EAAQY,GALE,gDAOdR,EAAS,KAAMS,SAPD,yBASVX,GAAW,SAAAO,GAAW,OAAKA,CAAL,IATZ,4EAAH,qDAYfD,GACH,GAAE,CAACH,EAASM,MAAMA,SACX,gCACHR,IAAS,SAAC,KAAD,qDACTF,IAAW,SAACa,EAAA,EAAD,KACP,OAAJf,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,QAAS,IAAK,SAACrB,EAAD,CAAUC,IAAKI,IAClB,KAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,UAAgB,wEAE9B,C","sources":["components/CastInfo/CastInfo.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import PropTypes, { shape } from \"prop-types\";\nimport { AdditionalInfoTitle } from \"components/common/common.styled\";\nimport Gallery from \"components/Gallery/Gallery\";\n\n\nexport const CastInfo = ({ arr }) => {    \n    return <section>\n        <AdditionalInfoTitle> Cast</AdditionalInfoTitle>\n        <Gallery arr={arr} use=\"cast\"/>\n    </section>\n};\n\nCastInfo.propTypes = {\n    arr: PropTypes.arrayOf(shape()).isRequired,\n}","import { CastInfo } from \"components/CastInfo/CastInfo\";\nimport { Error } from \"components/common/common.styled\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { useEffect, useState, } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { searchCast } from \"services/Api\";\n\nconst Cast = () => {    \n    const [cast, setCast] = useState(null);\n    const [loading, setLoading] = useState(false);    \n    const [error, setError] = useState(null);\n    const location = useLocation();    \n\n    useEffect(() => { \n        const fetchData = async () => {        \n            try {\n                setError(null);\n                setLoading(prevLoading => !prevLoading);\n                const data = await searchCast(location.state.state); \n                setCast(data);                \n        } catch (error) {\n            setError(error.message);\n        }finally {\n                setLoading(prevLoading => !prevLoading);\n            }\n        };\n        fetchData();\n    }, [location.state.state]);\n    return (<>    \n        {error && <Error>Sorry, something went wrong. Try again</Error>}        \n        {loading && <Loading />}\n        {cast?.length > 0 && <CastInfo arr={cast} />}\n        {cast?.length === 0 && <div>We have no information about the cast :(</div>}\n    </>)\n};\nexport default Cast;"],"names":["CastInfo","arr","Gallery","use","useState","cast","setCast","loading","setLoading","error","setError","location","useLocation","useEffect","fetchData","prevLoading","searchCast","state","data","message","Loading","length"],"sourceRoot":""}