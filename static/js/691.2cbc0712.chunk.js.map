{"version":3,"file":"static/js/691.2cbc0712.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Form, Field } from \"formik\";\n\nexport const Container = styled.div`\nmargin-top: ${p => p.theme.space[4]}px;\nmargin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const SearchBar = styled(Form)`\n    display: flex;\n    top: 0;\n    right: 0;\n    position: sticky;\n    align-items: center;\n    width: 50%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: ${p => p.theme.space[2]}px;\n    overflow: hidden;\n    margin-top: ${p => p.theme.space[3]}px;    \n    margin-bottom: ${p => p.theme.space[3]}px; \n    margin-left: auto;   \n    margin-right: ${p => p.theme.space[2]}px;  \n\n    @media screen and (min-width: 768px) {\n        width: 90%;\n        margin-right: ${p => p.theme.space[3]}px;\n    }\n`;\n\nexport const SearchButton = styled.button`\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    width: ${p => p.theme.space[6]}px;\n    height: ${p => p.theme.space[6]}px;\n    border: 0;  \n    background-color: ${p=>p.theme.colors.page};\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        opacity: 1;\n}\n\n    & > svg{\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport const StyledField = styled(Field)`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: ${p => p.theme.fontSizes.l};\n    border: none;\n    outline: none;\n    padding-left: ${p => p.theme.space[2]}px;\n    padding-right: ${p => p.theme.space[2]}px;\n\n    &::placeholder {\n        font: inherit;\n        font-size: ${p => p.theme.fontSizes.m};;\n}\n`;","import { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { FcSearch } from \"react-icons/fc\";\nimport {  useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { searchByName } from \"services/Api\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { Error, Page } from \"components/common/common.styled\";\nimport Gallery from \"components/Gallery/Gallery\";\nimport { SearchBar, SearchButton, StyledField } from \"./Movies.styled\";\n\nconst Movies = () => {\n    const [loading, setLoading] = useState(false);\n    const [movies, setMovies] = useState(null);\n    const [error, setError] = useState(null);  \n    const [searchNotFound, setSearchNotFound] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search') ?? '';\n\n    const validationSchema = Yup.object({\n        searchValue: Yup.string().required(),\n});\n    \n\n    useEffect(() => { \n        const fetchData = async () => {\n        if (search === '') { return }\n            try {                \n                setMovies(null);\n                setSearchNotFound(null);\n                setLoading(prevLoading => !prevLoading);\n                const data = await searchByName(search);\n                if (data.results.length === 0) {\n                    setSearchNotFound(`can't found ${search}`)\n                } else {\n                    setMovies(data.results);\n                    setSearchNotFound(null);\n                }           \n        } catch (error) {\n            setError(error.message);\n        }finally {\n                setLoading(prevLoading => !prevLoading);\n            }\n        };\n        fetchData();\n        \n    }, [search]);\n    \n    const onSubmit = ({searchValue}) => {        \n        setSearchParams(searchValue !== '' ? { search: searchValue } : {});        \n    }\n\n    return <Page>\n        <Formik initialValues={{ searchValue: '' }}\n            validationSchema={validationSchema}\n            onSubmit={(values, {resetForm}) => {\n                onSubmit(values);\n                resetForm();\n    }}>\n            <SearchBar>\n                <StyledField type=\"text\"\n                    name=\"searchValue\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search film\"/>\n                <SearchButton type=\"submit\">\n                    <FcSearch/>\n                </SearchButton>\n            </SearchBar>\n            </Formik>\n        {loading && <Loading />}\n        {error && <Error>Sorry, can't found {search}</Error>}\n        {searchNotFound && <Error>{ searchNotFound }</Error>}\n        {movies?.length > 0 && <Gallery arr={movies} use=\"movie\"/> }         \n    </Page>\n};\nexport default Movies;"],"names":["SearchBar","styled","p","theme","space","Form","SearchButton","colors","page","StyledField","Field","fontSizes","l","m","useState","loading","setLoading","movies","setMovies","error","setError","searchNotFound","setSearchNotFound","useSearchParams","searchParams","setSearchParams","search","get","validationSchema","Yup","searchValue","required","useEffect","fetchData","prevLoading","searchByName","data","results","length","message","initialValues","onSubmit","values","resetForm","type","name","autoComplete","autoFocus","placeholder","Loading","Gallery","arr","use"],"sourceRoot":""}