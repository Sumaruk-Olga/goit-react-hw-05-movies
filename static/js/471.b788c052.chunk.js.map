{"version":3,"file":"static/js/471.b788c052.chunk.js","mappings":"2PAIaA,EAAW,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAEvB,OADAC,QAAQC,IAAI,WAAYF,IACjB,gCACH,SAAC,KAAD,2BACA,SAACG,EAAA,EAAD,CAASH,IAAKA,EAAKI,IAAI,WAE9B,E,wCCwBD,EA3Ba,WACT,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEVN,GAAW,SAAAO,GAAW,OAAKA,CAAL,IAFZ,UAGSC,EAAAA,EAAAA,IAAWL,EAASM,MAAMA,OAHnC,OAGJC,EAHI,OAIVZ,EAAQY,GAJE,gDAMdR,EAAS,KAAMS,SAND,yBAQVX,GAAW,SAAAO,GAAW,OAAKA,CAAL,IARZ,4EAAH,qDAWfD,GACH,GAAE,CAACH,EAASM,MAAMA,SACX,gCACHV,IAAW,SAACa,EAAA,EAAD,IACXX,IAAS,SAAC,KAAD,yBACTJ,IAAQ,SAACP,EAAD,CAAUC,IAAKM,MAG/B,C","sources":["components/CastInfo/CastInfo.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import { AdditionalInfoTitle } from \"components/common/common.styled\";\nimport Gallery from \"components/Gallery/Gallery\";\n// import { List } from \"components/Gallery/Gallery.styled\";\n\nexport const CastInfo = ({ arr }) => {\n    console.log('CastInfo', arr);\n    return <section>\n        <AdditionalInfoTitle> info title</AdditionalInfoTitle>\n        <Gallery arr={arr} use=\"cast\"/>\n    </section>\n};","import { CastInfo } from \"components/CastInfo/CastInfo\";\nimport { Error } from \"components/common/common.styled\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { useEffect, useState, } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { searchCast } from \"services/Api\";\n\nconst Cast = () => {    \n    const [cast, setCast] = useState(null);\n    const [loading, setLoading] = useState(false);    \n    const [error, setError] = useState(null);\n    const location = useLocation();    \n\n    useEffect(() => { \n        const fetchData = async () => {        \n            try {\n                setLoading(prevLoading => !prevLoading);\n                const data = await searchCast(location.state.state);                  \n                setCast(data);                \n        } catch (error) {\n            setError(error.message);\n        }finally {\n                setLoading(prevLoading => !prevLoading);\n            }\n        };\n        fetchData();\n    }, [location.state.state]);\n    return (<>\n        {loading && <Loading />}\n        {error && <Error>Sorry, ...</Error>}\n        {cast && <CastInfo arr={cast} /> }\n        \n        </>)\n};\nexport default Cast;"],"names":["CastInfo","arr","console","log","Gallery","use","useState","cast","setCast","loading","setLoading","error","setError","location","useLocation","useEffect","fetchData","prevLoading","searchCast","state","data","message","Loading"],"sourceRoot":""}